# DDL for changesets database
# DDL
CREATE TABLE pending_changesets (id text, created_at text);
CREATE TABLE changesets (id text, bot int, created_at timestamp, closed_at timestamp, username text, closed_at_day ext, uid text, minlat float, minlon float, maxlat float, maxlon float, PRIMARY KEY(id));
CREATE TABLE countries(id int, parentid int, name text, fullname text, downloadname text, clat float, clon float,  map int, PRIMARY KEY(id));
CREATE TABLE changeset_country(changesetid text, countryid int, small int);


CREATE INDEX changesets_id_idx on changesets(id);
CREATE INDEX changesets_closed_at_day_idx on changesets(closed_at_day);
CREATE INDEX changesets_username_idx on changesets(username);
CREATE INDEX changesets_country_country_idx on changeset_country(countryid);
CREATE INDEX changesets_country_changeset_idx on changeset_country(changesetid);


GRANT ALL privileges ON ALL TABLES IN SCHEMA public to <user>;

ALTER TABLE changesets ADD PRIMARY KEY (id);

# SCHEDULE BASH !
for i in $(ls -d */); do echo $i; rm $i/15_*.osm.gz; done
for i in $(ls -d */); do echo $i; for t in $(seq 1 9); do rm $i/*_15_*_0$t.obf.gz; done; for t in $(seq 10 31); do rm $i/*_15_*_$t.obf.gz; done; done
# download
for t in $(seq 1 9); do rm $i/*_15_*_0$t.obf.gz; done; for t in $(seq 10 31); do rm $i/*_15_*_$t.obf.gz; done


# EXAMPLES
# SQL report
# Total changes by country, month
select c.name, changes.changes, changes.users, changes.month from (
select cc.countryid country, count(distinct ch.id) changes, substr(ch.closed_at_day, 0, 8) month, count(distinct ch.username) users from changesets ch, changeset_country cc
where ch.id = cc.changesetid and 

group by cc.countryid, substr(ch.closed_at_day, 0, 8)
) changes join countries c on c.id = changes.country
order by changes.month desc, changes.changes desc;


  SELECT username, count(*) changes,  
    ntile(10) over (order by count(*) desc) rank, sum(1) over () contributors,
    ntile(100) over (order by count(*) asc) ,
	100 * ntile(100) over (order by count(*) asc) / (sum(1) over () * 50.5) value_percent
	   FROM changesets 
	where substr(closed_at_day, 0, 8) = '2015-11'
	group by username
	having count(*) >= 3
	order by count(*) desc;


SELECT username,  changes, nt rank, (100. * nt / (sum(nt) over () )) percent FROM (
    SELECT username, count(*) changes,  ntile(100) over (order by count(*) asc) nt FROM changesets 
	where substr(closed_at_day, 0, 8) = '2015-11'
	group by username
	having count(*) >= 3
	order by nt desc, changes desc
) data where username like 'v%';


