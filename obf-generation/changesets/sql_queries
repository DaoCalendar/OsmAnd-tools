# DDL for changeset database
# DDL
CREATE TABLE pending_changesets (id text, created_at text) ;
CREATE TABLE changesets (id text, bot int, created_at timestamp, closed_at timestamp, username text, closed_at_day ext, uid text, minlat float, minlon float, maxlat float, maxlon float, PRIMARY KEY(id));
CREATE TABLE countries(id int, parentid int, name text, fullname text, downloadname text, clat float, clon float,  map int, PRIMARY KEY(id));
CREATE TABLE changeset_country(changesetid text, countryid int, small int);
CREATE TABLE supporters(userid text, token text, visiblename text, useremail text, preferred_region text, disable int);

CREATE TABLE map_users(aid text, email text, updatetime bigint);
CREATE TABLE osm_recipients(osmid text, email text, btcaddr text, updatetime bigint);
CREATE SEQUENCE supporters_seq START 1000;
ALTER TABLE supporters ADD PRIMARY KEY (userid);
CREATE TABLE supporters_subscription(userid text, sku text, purchasetoken text, time text, checktime bigint,
			autorenewing text, starttime bigint, expiretime bigint, kind text);

ALTER TABLE changeset_country OWNER TO <user>;

CREATE INDEX changesets_id_idx on changesets(id);
CREATE INDEX changesets_closed_at_day_idx on changesets(closed_at_day);
CREATE INDEX changesets_username_idx on changesets(username);
CREATE INDEX changesets_country_country_idx on changeset_country(countryid);
CREATE INDEX changesets_country_changeset_idx on changeset_country(changesetid);

CREATE TABLE final_reports (name text, month text, region text, report text, time int) ;

# CURRENT MONTH MATERIALIZED VIEW
CREATE MATERIALIZED VIEW changesets_view AS SELECT * FROM changesets where 
closed_at > ( (SELECT max(closed_at) FROM changesets)::date - '60 day'::interval) WITH DATA;
CREATE MATERIALIZED VIEW changeset_country_view AS SELECT * FROM changeset_country c where exists (select 1 from changesets_view d where d.id = c.changesetid) WITH DATA;
# REFRESH MATERIALIZED VIEW  changesets_view ;
# REFRESH MATERIALIZED VIEW  changeset_country_view ;


GRANT ALL privileges ON ALL TABLES IN SCHEMA public to <user>;
GRANT ALL privileges ON supporters_seq to <user>;


# SCHEDULE BASH !
for i in $(ls -d */); do echo $i; rm $i/15_*.osm.gz; done
for i in $(ls -d */); do echo $i; for t in $(seq 1 9); do rm $i/*_15_*_0$t.obf.gz; done; for t in $(seq 10 31); do rm $i/*_15_*_$t.obf.gz; done; done
# download
for t in $(seq 1 9); do rm $i/*_15_*_0$t.obf.gz; done; for t in $(seq 10 31); do rm $i/*_15_*_$t.obf.gz; done
