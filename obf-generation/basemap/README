1. Find and install Geo::ShapeFile, HTML::Entities for Perl.
   Using perl CPAN:
       sudo perl -MCPAN -e 'install HTML::Entities'
       sudo perl -MCPAN -e 'install Geo::ShapeFile'
   or do it manually according to packages READMEs
   //? USE smothness = 2

I. Make all 5 files
=======
1. Find and install perl Geo-ShapeFile-2.52
sudo perl -MCPAN -e 'install Geo::ShapeFile' 

2. Download data
- http://www.naturalearthdata.com/downloads/10m-physical-vectors/10m-coastline/

Process 
I. Make all 5  files
II. Merge them
III. Run Index Creator

-------------
Coastlines
1. Download ne_10m_coastline.zip from http://www.naturalearthdata.com/downloads/10m-physical-vectors/10m-coastline/
2. Unzip it
3. Locate and run 'shp2osm.pl' script as should below:
   perl ./shp2osm.pl ./ne_10m_coastline.shp | sed 's/FeatureCla/natural/g;s/Coastline/coastline/g' > ./ne_10m_coastline.osm 
4. Fix manually all 180 degrees breaks (simply divide islands into 2 islands and add connect line on 180 degree) and make Antarctica cycled.
-------------------------
admin level
Example (replacing tags): 
1. perl ./shp2osm.pl 10m-admin-0-countries/10m_admin_0_countries.shp |  sed 's/FeatureCla/admin_level/g;s/Adm-0 country/0/g;s/NAME/name/g'  > 10m_admin_level.osm
2. Open in JOSM and remove or fix antarctica
3. Run net.osmand.osm.util.FixAdminLevel0 from DataExtractionosm.jar with arg0=filename.
   To create country tag="place" value="country"
4. Open in Josm and simply save
// 5. Run Index Creator

-------------------------
cities/towns
Example (replacing tags): 
1. python ogr2osm/ogr2osm.py 10m-populated-places/10m_populated_places.shp
Creates 10m_populated_places.osm
2. less 10m_populated_places.osm | sed 's/MEGACITY/place/g;s/v="1"/v="city"/g;s/v="0"/v="town"/g;s/NAME/name/g'  > 10m_populated_places_out.osm
// 3. Run IndexCreator

-------------------------
lakes
Example (replacing tags): 
1. perl ./shp2osm.pl 10m-lakes/10m_lakes.shp  |  sed 's/FeatureCla/natural/g;s/Lake/lake/g;s/Reservoir/water/g;s/Name1/name/g'  > 10m_lakes.osm
Creates 10m_lakes.osm
2. Run net.osmand.osm.util.FixLinkedCoastline from DataExtractionosm.jar with arg0=filename.
3. Open in Josm and simply save
// 4. Run IndexCreator

-------------------------
rivers
Example (replacing tags): 
1. perl ./shp2osm.pl 10m-rivers-lake-centerlines/10m_rivers_lake_centerlines.shp  |  sed 's/FeatureCla/waterway/g;s/River/river/g;s/Name/name/g' > 10m_rivers.osm
Creates 10m_lakes.osm
2. Run net.osmand.osm.util.FixLinkedCoastline from DataExtractionosm.jar with arg0=filename.
3. Open in Josm and simply save

------------------------------
Index using osmpgsql planet.osm & run query_polygons_osm.py

------
Run Generate basemap job
